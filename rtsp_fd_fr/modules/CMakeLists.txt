cmake_minimum_required(VERSION 3.0)

include(${CMAKE_SOURCE_DIR}/modules/3rd/tracer/tracer.cmake)

function(init_module MODULE)
    add_library(${MODULE} INTERFACE)
endfunction()

function(add_submodule MODULE SUBDIR)
    set(SUBMODULE "${MODULE}_${SUBDIR}")
    if (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/${SUBDIR}/CMakeLists.txt)
        add_subdirectory(${SUBDIR})
    else ()
        file (GLOB_RECURSE SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/${SUBDIR}/src/*.cpp)
        add_library(${SUBMODULE} STATIC EXCLUDE_FROM_ALL ${SOURCES} ${Tracer_SRC})
        target_include_directories(${SUBMODULE} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/${SUBDIR}/include)
        target_include_directories(${SUBMODULE} PUBLIC ${Tracer_INCLUDE_DIRS})
        target_link_libraries(${SUBMODULE} PUBLIC ${STANDARD_LDFLAGS})
    endif ()

    target_link_libraries(${MODULE} INTERFACE ${SUBMODULE})
endfunction()

file(GLOB MODULE_PATHS LIST_DIRECTORIES true ${CMAKE_CURRENT_SOURCE_DIR}/*/)
foreach (MODULE_PATH ${MODULE_PATHS})
    get_filename_component(MODULE ${MODULE_PATH} NAME_WE)
    if (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/${MODULE}/CMakeLists.txt)
        add_subdirectory(${MODULE})
    else()
        message(STATUS "module ${MODULE}: build with common procedure")
        file(GLOB_RECURSE SOURCES ${MODULE}/src/*.cpp)
        add_library(${MODULE} STATIC "${SOURCES}" "${Tracer_SRC}" "${LIBLINEAR_SRC}")
        target_include_directories(${MODULE} PRIVATE ${LIBLINEAR_INCLUDE_DIRS})
        target_include_directories(${MODULE} PRIVATE ${MODULE_INCLUDE_DIRS})
        target_include_directories(${MODULE} PRIVATE ${PLATFORM_INCLUDE_DIRS})
        target_include_directories(${MODULE} PRIVATE ${Tracer_INCLUDE_DIRS})
        list(APPEND MODULE_LIBRARIES ${MODULE})
    endif()
endforeach()
